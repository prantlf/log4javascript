<project name="log4javascript" default="build" basedir=".">
	<property name="container" value=".."/>
	<property name="base" value="."/>
	<property name="src" value="src"/>
	<property name="dist" value="${base}/dist"/>
	<property name="distfile" value="log4javascript-1.3"/>
	<property name="thisversion.folder" value="log4javascript-1.3"/>
	<property name="currentversion.folder" value="log4javascript-current"/>
	<property name="dist.folder" value="${dist}/${thisversion.folder}"/>

	<property name="sourceforge.folder" value="${base}/sourceforge"/>
	<property name="sourceforge.thisversion.folder" value="${sourceforge.folder}/${thisversion.folder}"/>
	<property name="sourceforge.currentversion.folder" value="${sourceforge.folder}/${currentversion.folder}"/>

	<property name="timdown.co.uk.folder" value="${base}/timdown.co.uk"/>
	<property name="timdown.co.uk.thisversion.folder" value="${timdown.co.uk.folder}/${thisversion.folder}"/>
	<property name="timdown.co.uk.currentversion.folder" value="${timdown.co.uk.folder}/${currentversion.folder}"/>

	<property name="googleanalytics.folder" value="${base}/googleanalytics"/>
	<property name="build" value="${base}/build"/>
	<property name="working" value="working"/>

	<target name="createworking">
		<mkdir dir="${working}"/>
	</target>

	<target name="cleanup">
		<delete dir="${working}"/>
	</target>

	<target name="build.main" depends="createworking">
		<property name="consolefile" value="${working}/console.html"/>
		<property name="consolefile.uncompressed" value="${working}/console_uncompressed.html"/>
		<property name="consolefile.js" value="${working}/console.js"/>
		<property name="consolefile.js.compressed" value="${working}/console_compressed.js"/>
		<property name="consolefile.css" value="${working}/console.css"/>
		<property name="mainfile" value="${working}/log4javascript_uncompressed.js"/>
		<property name="mainfile.build" value="${build}/log4javascript_uncompressed.js"/>
		<property name="mainfile.compressed" value="${working}/log4javascript.js"/>
		<property name="mainfile.compressed.build" value="${build}/log4javascript.js"/>
		<property name="stubfile.build" value="${build}/log4javascript_stub_uncompressed.js"/>
		<property name="stubfile.compressed.build" value="${build}/log4javascript_stub.js"/>
		
		<!-- Make a working copy of the console HTML file -->
		<copy file="${src}/console.html" tofile="${consolefile}" overwrite="true"/>

		<!-- Remove the script tags that refer to files for the standalone console -->
		<replaceregexp file="${consolefile}" match="&lt;!--build:remove_start--&gt;.*?&lt;!--build:remove_end--&gt;" flags="s" replace=""/>
		
		<!-- Create the uncompressed build of the main file, log4javascript.js -->
		<copy file="${consolefile}" tofile="${consolefile.uncompressed}" overwrite="true"/>
		<replaceregexp file="${consolefile.uncompressed}" match="'" flags="sg" replace="\\\\'"/>
		<replaceregexp file="${consolefile.uncompressed}" match="^" replace="'" byline="true"/>
		<replaceregexp file="${consolefile.uncompressed}" match="$" replace="'," byline="true"/>
		<replaceregexp file="${consolefile.uncompressed}" match="\\r" flags="sg" replace="\\\\\\\\r"/>
		<replaceregexp file="${consolefile.uncompressed}" match="\\n" flags="sg" replace="\\\\\\\\n"/>
		<replaceregexp file="${consolefile.uncompressed}" match="\\&quot;" flags="sg" replace="\\\\\\\\\\\\&quot;"/>
		<replaceregexp file="${consolefile.uncompressed}" match=",$" replace=""/>
		<replace file="${consolefile.uncompressed}" token="/* build:js_start */" value=""/>
		<replace file="${consolefile.uncompressed}" token="/* build:js_end */" value=""/>
		<replace file="${consolefile.uncompressed}" token="/* build:css_start */" value=""/>
		<replace file="${consolefile.uncompressed}" token="/* build:css_end */" value=""/>
		<loadfile property="consolefile.uncompressed.content" srcfile="${consolefile.uncompressed}"/>
		<copy file="${src}/log4javascript.js" tofile="${mainfile}" overwrite="true"/>
		<replaceregexp file="${mainfile}" match="/\* build:console_start \*/.*?/\* build:console_end \*/" flags="sg" replace="/* build:console */"/>
		<replace file="${mainfile}" token="/* build:console */" value="${consolefile.uncompressed.content}"/>
		<copy file="${mainfile}" tofile="${mainfile.build}" overwrite="true"/>

		<!-- Extract JavaScript from console file and write it to a file -->
		<copy file="${consolefile}" tofile="${consolefile.js}" overwrite="true"/>
		<replaceregexp file="${consolefile.js}" match="^.*?/\* build:js_start \*/" flags="s" replace=""/>
		<replaceregexp file="${consolefile.js}" match="/\* build:js_end \*/.*?$" flags="s" replace=""/>
		
		<!-- Compress the console JavaScript -->
		<!--
		<exec dir="${base}" executable="js.exe">
			<arg value="${consolefile.js}"/>
			<arg value="${consolefile.js.compressed}"/>
		</exec>
		-->
		<exec dir="${base}" executable="f:\jscruncher\jscrunch32.exe">
			<arg value="jscruncher/console.js.jpro"/>
		</exec>
		
		<!-- Extract CSS from console file and write it to a file -->
		<copy file="${consolefile}" tofile="${consolefile.css}" overwrite="true"/>
		<replaceregexp file="${consolefile.css}" match="^.*?/\* build:css_start \*/" flags="s" replace=""/>
		<replaceregexp file="${consolefile.css}" match="/\* build:css_end \*/.*?$" flags="s" replace=""/>
		
		<!-- Compress the CSS with regular expressions -->

		<!-- Remove comments -->
		<replaceregexp file="${consolefile.css}" match="/\*.*?\*/" flags="sg" replace=""/>
		<!-- Remove newlines -->
		<replaceregexp file="${consolefile.css}" match="[\r\n]+" flags="sg" replace=""/>
		<!-- Collapse spaces and tabs down to one space -->
		<replaceregexp file="${consolefile.css}" match="[\t ]+" flags="sg" replace=" "/>
		<!-- Remove spaces around special characters -->
		<replaceregexp file="${consolefile.css}" match="\s?([;:{},+>])\s?" flags="sg" replace="\1"/>
		<!-- Remove semicolon for last statement in a rule  -->
		<replaceregexp file="${consolefile.css}" match=";}" flags="sg" replace="}"/>
		
		<!-- Substitute the JavaScript back into the console file -->
		<replace file="${consolefile.js.compressed}" token="\" value="\\\\\\\\"/>
		<loadfile property="consolefile.js.compressed.content" srcfile="${consolefile.js.compressed}"/>
		<replaceregexp file="${consolefile}" match="/\* build:js_start \*/.*?/\* build:js_end \*/" flags="sg" replace="${consolefile.js.compressed.content}"/>
		
		<!-- Substitute the CSS back into the console file -->
		<loadfile property="consolefile.css.content" srcfile="${consolefile.css}"/>
		<replaceregexp file="${consolefile}" match="/\* build:css_start \*/.*?/\* build:css_end \*/" flags="sg" replace="${consolefile.css.content}"/>

		<!-- Remove unnecessary line breaks in compressed console file -->
		<replaceregexp file="${consolefile}" match="(\r\n|\n|\r)\s*" flags="sg" replace="\1"/>
		
		<!-- Create the compressed build of the main file, log4javascript.js -->
		<replaceregexp file="${consolefile}" match="'" flags="sg" replace="\\\\'"/>
		<replaceregexp file="${consolefile}" match="^" replace="'" byline="true"/>
		<replaceregexp file="${consolefile}" match="$" replace="'," byline="true"/>
		<replaceregexp file="${consolefile}" match="\\&quot;" flags="sg" replace="\\\\\\\\&quot;"/>
		<replaceregexp file="${consolefile}" match=",$" replace=""/>
		<loadfile property="consolefile.content" srcfile="${consolefile}"/>
		<copy file="${src}/log4javascript.js" tofile="${mainfile.compressed}" overwrite="true"/>
		<replaceregexp file="${mainfile.compressed}" match="/\* build:console_start \*/.*?/\* build:console_end \*/" flags="sg" replace="/* build:console */"/>
		<replace file="${mainfile.compressed}" token="/* build:console */" value="${consolefile.content}"/>

		<!-- Compress the main JavaScript -->
		<!--
		<exec dir="${base}" executable="js.exe">
			<arg value="${mainfile.compressed}"/>
			<arg value="${mainfile.compressed.build}"/>
		</exec>
		-->
		<exec dir="${base}" executable="f:\jscruncher\jscrunch32.exe">
			<arg value="jscruncher/log4javascript.js.jpro"/>
		</exec>
		
		<!-- Include the licence at the top of the compressed and uncompressed versions of the main .js file -->
		<loadfile property="licence.js.content" srcfile="${src}/licence.js"/>
		<replaceregexp file="${mainfile.compressed.build}" match="^" replace="${licence.js.content}" byline="false"/>
		<replaceregexp file="${mainfile.build}" match="^" replace="${licence.js.content}" byline="false"/>

		<!-- Copy and compress the stub JavaScript -->
		<copy file="${src}/log4javascript_stub.js" tofile="${stubfile.build}" overwrite="true"/>
		<exec dir="${base}" executable="f:\jscruncher\jscrunch32.exe">
			<arg value="jscruncher/log4javascript_stub.js.jpro"/>
		</exec>
	</target>

	<target name="build" depends="build.main,cleanup" description="Builds the JavaScript files from the source components"/>
	
	<target name="create_dist_folder">
		<mkdir dir="${dist.folder}"/>
	</target>

	<patternset id="supporting_files">
		<include name="docs/index.html"/>
		<include name="docs/manual.html"/>
		<include name="docs/quickstart.html"/>
		<include name="examples/*"/>
		<include name="demos/index.html"/>
		<include name="demos/basic.html"/>
		<include name="demos/full.html"/>
		<include name="demos/full_noajax.html"/>
		<include name="main.css"/>
		<include name="changelog.txt"/>
		<include name="license.txt"/>
	</patternset>

	<patternset id="index_files">
		<include name="index.html"/>
	</patternset>
	
	<fileset id="built_js_files" dir="${build}">
		<include name="*"/>
	</fileset>


    <target name="gather_dist_files" depends="create_dist_folder" description="Copies all the files ready to be zipped">
    	<!-- Copy supporting files -->
		<copy todir="${dist.folder}">
            <fileset dir="${base}">
                <patternset refid="supporting_files" />
            </fileset>
		</copy>

		<!-- Delete the Ajax version of the full demo and replace it with the non-Ajax version -->
		<delete file="${dist.folder}/demos/full.html" />
		<move file="${dist.folder}/demos/full_noajax.html" tofile="${dist.folder}/demos/full.html"/>

		<!-- Replace the Google analytics tag with nothing -->
		<replaceregexp match="&lt;!--build:googleanalytics--&gt;" flags="sg" replace="">
            <fileset dir="${dist.folder}">
                <patternset refid="supporting_files" />
            </fileset>
		</replaceregexp>

		<!-- Replace the Sourceforge logo tag with nothing -->
		<replaceregexp match="&lt;!--build:sflogo--&gt;" flags="sg" replace="">
            <fileset dir="${dist.folder}">
                <patternset refid="supporting_files" />
            </fileset>
		</replaceregexp>
		
		<!-- Copy in the JS files -->
		<copy todir="${dist.folder}">
            <fileset refid="built_js_files"/>
		</copy>
    </target>

	<target name="create_zip" depends="gather_dist_files">
		<zip destfile="${dist}/${distfile}.zip">
			<zipfileset dir="${dist.folder}" prefix="${distfile}/"/>
		</zip>
    </target>

	<target name="create_targz" depends="gather_dist_files">
		<tar tarfile="${dist}/${distfile}.tar">
			<tarfileset dir="${dist.folder}" prefix="${distfile}/"/>
		</tar>
		<gzip zipfile="${dist}/${distfile}.tar.gz" src="${dist}/${distfile}.tar"/>
		<delete file="${dist}/${distfile}.tar"/>
    </target>

	<target name="clean_dist" depends="create_zip, create_targz">
		<delete dir="${dist.folder}"/>
	</target>
	
	<target name="create_sourceforge_folder">
		<delete dir="${sourceforge.folder}" quiet="true"/>
		<mkdir dir="${sourceforge.folder}"/>
	</target>

	<target name="build_for_sourceforge" depends="create_sourceforge_folder" description="Creates copy of files for Sourceforge">

    	<!-- Copy supporting files -->
		<copy todir="${sourceforge.thisversion.folder}">
            <fileset dir="${base}">
                <patternset refid="supporting_files" />
            </fileset>
		</copy>
		<copy todir="${sourceforge.folder}">
            <fileset dir="${container}">
                <patternset refid="index_files" />
            </fileset>
		</copy>

		<!-- Delete the Ajax version of the full demo and replace it with the non-Ajax version -->
		<delete file="${sourceforge.thisversion.folder}/demos/full.html" />
		<move file="${sourceforge.thisversion.folder}/demos/full_noajax.html" tofile="${sourceforge.thisversion.folder}/demos/full.html"/>

		<!-- Replace the Google analytics tag with the Sourceforge tag -->
		<loadfile property="sourceforge.googleanalytics.content" srcfile="${googleanalytics.folder}/sourceforge.html"/>
		<replaceregexp match="&lt;!--build:googleanalytics--&gt;" flags="sg" replace="${sourceforge.googleanalytics.content}">
            <fileset dir="${sourceforge.thisversion.folder}">
                <patternset refid="supporting_files" />
            </fileset>
            <fileset dir="${sourceforge.folder}">
                <patternset refid="index_files" />
            </fileset>
		</replaceregexp>

		<!-- Replace the Sourceforge logo tag with the Sourceforge logo HTML -->
		<loadfile property="sourceforge.logo.content" srcfile="${base}/sflogo.html"/>
		<replaceregexp match="&lt;!--build:sflogo--&gt;" flags="sg" replace="${sourceforge.logo.content}">
            <fileset dir="${sourceforge.thisversion.folder}">
                <patternset refid="supporting_files" />
            </fileset>
            <fileset dir="${sourceforge.folder}">
                <patternset refid="index_files" />
            </fileset>
		</replaceregexp>
		
		<!-- Copy in the JS files -->
		<copy todir="${sourceforge.thisversion.folder}">
            <fileset refid="built_js_files"/>
		</copy>
		
		<!-- Copy the whole main directory as log4javascript-current -->
		<copy todir="${sourceforge.currentversion.folder}">
            <fileset dir="${sourceforge.thisversion.folder}"/>
		</copy>
    </target>

	<target name="create_timdown.co.uk_folder">
		<delete dir="${timdown.co.uk.folder}" quiet="true"/>
		<mkdir dir="${timdown.co.uk.folder}"/>
	</target>

	<target name="build_for_timdown.co.uk" depends="create_timdown.co.uk_folder" description="Creates copy of files for timdown.co.uk">
        <patternset id="timdown.co.uk_supporting_files">
        	<patternset refid="supporting_files"/>
			<include name="demos/ajax"/>
			<include name="demos/ajax/sessions"/>
			<include name="demos/ajax/blank.html"/>
			<include name="demos/ajax/jslogger.php"/>
			<include name="demos/ajax/json.php"/>
        </patternset>

    	<!-- Copy supporting files -->
		<copy todir="${timdown.co.uk.thisversion.folder}">
            <fileset dir="${base}">
                <patternset refid="timdown.co.uk_supporting_files" />
            </fileset>
		</copy>
		<copy todir="${timdown.co.uk.folder}">
            <fileset dir="${container}">
                <patternset refid="index_files" />
            </fileset>
		</copy>

		<!-- Delete the non-Ajax version of the full demo -->
		<delete file="${timdown.co.uk.thisversion.folder}/demos/full_noajax.html" />

		<!-- Replace the Google analytics tag with the Sourceforge tag -->
		<loadfile property="timdown.co.uk.googleanalytics.content" srcfile="${googleanalytics.folder}/timdown.co.uk.html"/>
		<replaceregexp match="&lt;!--build:googleanalytics--&gt;" flags="sg" replace="${timdown.co.uk.googleanalytics.content}">
            <fileset dir="${timdown.co.uk.thisversion.folder}">
                <patternset refid="timdown.co.uk_supporting_files" />
            </fileset>
            <fileset dir="${timdown.co.uk.folder}">
                <patternset refid="index_files" />
            </fileset>
		</replaceregexp>

		<!-- Replace the Sourceforge logo tag with nothing -->
		<replaceregexp match="&lt;!--build:sflogo--&gt;" flags="sg" replace="">
            <fileset dir="${timdown.co.uk.thisversion.folder}">
                <patternset refid="timdown.co.uk_supporting_files" />
            </fileset>
            <fileset dir="${timdown.co.uk.folder}">
                <patternset refid="index_files" />
            </fileset>
		</replaceregexp>
		
		<!-- Copy in the JS files -->
		<copy todir="${timdown.co.uk.thisversion.folder}">
            <fileset refid="built_js_files"/>
		</copy>
		
		<!-- Copy the whole main directory as log4javascript-current -->
		<copy todir="${timdown.co.uk.currentversion.folder}">
            <fileset dir="${timdown.co.uk.thisversion.folder}"/>
		</copy>
    </target>

    <target name="dist" depends="clean_dist" description="Creates the log4javascript distribution"/>
    <target name="full_build" depends="build, dist, build_for_sourceforge, build_for_timdown.co.uk" description="Full build"/>
</project>
